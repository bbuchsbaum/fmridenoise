% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ndx_utils.R
\name{ndx_orthogonalize_matrix_against_basis}
\alias{ndx_orthogonalize_matrix_against_basis}
\title{Orthogonalize a Target Matrix Against a Basis Matrix}
\usage{
ndx_orthogonalize_matrix_against_basis(
  target_matrix,
  basis_matrix,
  tol = 1e-09
)
}
\arguments{
\item{target_matrix}{A numeric matrix whose columns will be orthogonalized.}

\item{basis_matrix}{A numeric matrix representing the basis against which
the columns of `target_matrix` will be orthogonalized. Must have the same
number of rows as `target_matrix`.}

\item{tol}{Numeric, tolerance for checking if a basis vector is zero or if a
target vector becomes zero after orthogonalization. Columns in `basis_matrix`
with sum of squares less than `tol` will be excluded. Target columns that become
zero (sum of squares < `tol`) after orthogonalization will be returned as zeros.
Default is `1e-9`.}
}
\value{
A matrix with the same dimensions as `target_matrix`, where each
  column is the orthogonalized version of the corresponding column in the
  input `target_matrix`. If `basis_matrix` is NULL, has zero columns, or all its
  columns have near-zero variance, the original `target_matrix` is returned.
  If `target_matrix` is NULL or has zero columns, it is returned as is.
}
\description{
This function orthogonalizes each column of a `target_matrix` with respect to
all columns in a `basis_matrix`. The orthogonalization is performed using a
projection onto the orthonormal basis of `basis_matrix` computed via QR
decomposition. Formally the result is
`target_matrix - Q %*% crossprod(Q, target_matrix)` where `Q` contains the
orthonormal columns spanning `basis_matrix`.
}
\examples{
\dontrun{
basis <- matrix(rnorm(10*2), 10, 2)
basis[,2] <- basis[,1] * 2 + rnorm(10, 0, 0.1) # Make somewhat collinear
target <- matrix(rnorm(10*3), 10, 3)
target[,1] <- basis[,1] * 0.5 + rnorm(10, 0.5)
target[,2] <- basis[,2] * 0.8 + rnorm(10, 0.2)

orthogonalized_target <- ndx_orthogonalize_matrix_against_basis(target, basis)

# Check orthogonality (should be close to zero)
# t(orthogonalized_target) \%*\% basis

# Example with a zero column in basis
basis_with_zero <- cbind(basis, rep(0, 10))
ortho_target_zero_basis <- ndx_orthogonalize_matrix_against_basis(target, basis_with_zero)

# Example with basis_matrix being NULL
ortho_target_null_basis <- ndx_orthogonalize_matrix_against_basis(target, NULL)
print(all.equal(target, ortho_target_null_basis))
}
}
