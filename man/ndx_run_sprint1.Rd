% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ndx_workflow.R
\name{ndx_run_sprint1}
\alias{ndx_run_sprint1}
\title{Run a Single Pass of the ND-X Sprint 1 Denoising Workflow}
\usage{
ndx_run_sprint1(
  Y_fmri,
  events,
  motion_params,
  run_idx,
  TR,
  spike_TR_mask = NULL,
  user_options = list(),
  verbose = TRUE
)
}
\arguments{
\item{Y_fmri}{A numeric matrix of fMRI data (total_timepoints x voxels), concatenated across runs if applicable.}

\item{events}{A data frame describing experimental events. Must contain columns compatible
with `ndx_initial_glm` and `ndx_estimate_initial_hrfs` (e.g., `onsets`, `durations`, `condition`, `blockids`).}

\item{motion_params}{A numeric matrix of motion parameters (total_timepoints x num_motion_regressors).}

\item{run_idx}{A numeric vector indicating run membership for each row (timepoint)
in `Y_fmri`, `motion_params`, etc.}

\item{TR}{Numeric, repetition time in seconds.}

\item{spike_TR_mask}{Optional. A logical vector of length `nrow(Y_fmri)` where TRUE
indicates a TR to be excluded from HRF estimation and potentially other steps.
If NULL, all TRs are considered valid initially.}

\item{user_options}{A list containing various sub-lists of user-configurable options for each module:
- `opts_pass0`: List of options for `ndx_initial_glm` (e.g., `poly_degree`). This value is passed to `ndx_build_design_matrix` via its `poly_degree` argument.
- `opts_hrf`: List of options for `ndx_estimate_initial_hrfs` (e.g., `hrf_fir_taps`, `good_voxel_R2_threshold`, `lambda1_grid`, `lambda2_grid`, `cv_folds`).
- `opts_rpca`: List of options for `ndx_rpca_temporal_components_multirun` (e.g., `k_per_run_target`, `rpca_lambda_auto`).
- `opts_spectral`: List of options for `ndx_spectral_sines` (e.g., `n_sine_candidates`, `nyquist_guard_factor`, `k_tapers`, `nw`).
- `opts_whitening`: List of options for `ndx_ar2_whitening` (e.g., `order`, `global_ar_on_design`, `max_ar_failures_prop`).
- `opts_ridge`: List of options including `lambda_ridge` for `ndx_solve_ridge`.
- `task_regressor_names_for_extraction` (character vector): Names of task regressors to extract betas for.}

\item{verbose}{Logical, if TRUE, print progress messages. Default: TRUE.}
}
\value{
A list containing key outputs from the workflow, such as:
  - `final_task_betas`: Extracted task betas after ridge regression.
  - `Y_residuals_whitened`: Residuals after whitening and ridge regression.
  - `Y_residuals_pass0`: Residuals from the initial GLM fit.
  - `ar_coeffs_voxelwise`: Voxelwise AR(2) coefficients.
  - `rpca_components`: Temporal components from RPCA.
  - `spectral_sines`: Sine/cosine components from spectral analysis.
  - `estimated_hrfs`: Table of estimated FIR HRFs.
  - `pass0_vars`: Baseline variance from initial GLM for DES calculation.
  - `na_mask_whitening`: Mask of NAs introduced by AR(2) whitening filter.
  - `X_full_design`: The constructed design matrix.
}
\description{
This function orchestrates the core modules of the ND-X pipeline developed in Sprint 1.
It performs initial residual generation, FIR HRF estimation, nuisance component
identification (RPCA and Spectral), AR(2) pre-whitening, and ridge regression.
}
